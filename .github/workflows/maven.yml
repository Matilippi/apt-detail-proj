# This workflow will build a Java project with Maven
name: Java CI with Maven and Docker in Linux
  
on:
 push:
   branches:
    - master
   pull_request:
    - master
 
jobs:
   build:
     runs-on: ${{ matrix.os }}
     env: 
        workdir: com.detail.app.mydetail
     strategy:
        matrix:
           os: [ubuntu-latest, macos-latest]
           include:
           - java: 8
             additional-maven-args: "-Pjacoco -DrepoToken=$COVERALLS_REPO_TOKEN coveralls:report"
           
     name: Build with Java ${{matrix.java}} on ${{matrix.os}}      
 
     steps:
     - uses: actions/checkout@v2
     - name: Set up JDK ${{matrix.java}}
       uses: actions/setup-java@v1
       with:
         java-version: ${{matrix.java}}
     - name: Cache Maven packages
       uses: actions/cache@v2
       with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-key: ${{ runner.os }}-m2-
     - name: Build with Maven
       run: > 
          mvn clean verify ${{matrix.additional-maven-args}}
       env: 
          COVERALLS_REPO_TOKEN: ${{secrets.COVERALLS_TOKEN}}
       working-directory: ${{ env.workdir }}
     - name: Verify Docker
       run: > 
          mvn verify -Pdocker
       working-directory: ${{ env.workdir }}
     - name: Archive JUnit Report
       uses: actions/upload-artifact@v2
       if: ${{ always() }}
       with: 
          name: surfire-report-jdk-${{matrix.java}}
          path: '**/target/site'